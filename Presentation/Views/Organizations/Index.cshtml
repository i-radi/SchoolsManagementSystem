@model PaginatedList<OrganizationViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Organizations</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "Organizations", FormMethod.Get))
{
    <p>
        @Html.TextBox("searchName", ViewBag.CurrentFilter as string, new { placeholder = "Search by name" })
        <input type="submit" value="Search" />
    </p>
}
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <a href="/Schools?organizationId=@item.Id">Manage Schools</a> |
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div class="row">
    <div class="col-md-6">
        <p>Total Pages: @Model.TotalPages</p>
    </div>
</div>
<ul class="pagination">
    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { pageNumber = 1 })">First</a>
    </li>
    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex - 1 })">Previous</a>
    </li>
    @for (int i = Model.PageIndex - 3; i <= Model.PageIndex + 3 && i <= Model.TotalPages; i++)
    {
        if (i > 0)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
            </li>
        }
    }
    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex + 1 })">Next</a>
    </li>
    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.TotalPages })">Last</a>
    </li>
</ul>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
<script>
    function changePageSize(pageSize) {
        window.location.href = `Organizations?page=${@Model.PageIndex}&pageSize=${pageSize}`;
    }
</script>
}