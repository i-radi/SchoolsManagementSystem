@model PaginatedList<GetUserDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Users</h1>

<p>
    <a asp-action="Create" asp-controller="Members">Create New User</a>
</p>

@using (Html.BeginForm("Index", "Users", FormMethod.Get))
{
    <p>
        @Html.TextBox("searchName", ViewBag.CurrentFilter as string, new { placeholder = "Search by name" })
        
        @Html.Label("Role:")
        @Html.TextBox("searchRole", ViewBag.CurrentRoleFilter as string, new { placeholder = "Search by role" })

        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Name
            </th>
            <th>
                PhoneNumber
            </th>
            <th>
                Email
            </th>
            <th>
                Organization
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Organization)
            </td>
            <td>
                <a href="/users/Roles/@item.Id">Manage Roles</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<ul class="pagination">
    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { page = 1 })">First</a>
    </li>
    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1 })">Previous</a>
    </li>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
        </li>
    }
    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1 })">Next</a>
    </li>
    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
        <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages })">Last</a>
    </li>
</ul>
